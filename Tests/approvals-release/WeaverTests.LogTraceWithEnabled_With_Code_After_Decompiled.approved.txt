.class public auto ansi beforefieldinit LoggerIsEnabledSenarios
       extends [netstandard]System.Object
{
  .method public hidebysig instance void 
          LogTraceWithEnabled_With_Code_After() cil managed
  {
    // Code size       42 (0x2a)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [Microsoft.Extensions.Logging.Abstractions]Microsoft.Extensions.Logging.ILogger LoggerIsEnabledSenarios::_logger
    IL_0006:  ldc.i4.0
    IL_0007:  callvirt   instance bool [Microsoft.Extensions.Logging.Abstractions]Microsoft.Extensions.Logging.ILogger::IsEnabled(valuetype [Microsoft.Extensions.Logging.Abstractions]Microsoft.Extensions.Logging.LogLevel)
    IL_000c:  brfalse.s  IL_0029
    IL_000e:  ldarg.0
    IL_000f:  ldfld      class [Microsoft.Extensions.Logging.Abstractions]Microsoft.Extensions.Logging.ILogger LoggerIsEnabledSenarios::_logger
    IL_0014:  ldstr      "message"
    IL_0019:  call       !!0[] [netstandard]System.Array::Empty<object>()
    IL_001e:  call       void [Microsoft.Extensions.Logging.Abstractions]Microsoft.Extensions.Logging.LoggerExtensions::LogTrace(class [Microsoft.Extensions.Logging.Abstractions]Microsoft.Extensions.Logging.ILogger,
                                                                                                                                 string,
                                                                                                                                 object[])
    IL_0023:  ldarg.0
    IL_0024:  call       instance void LoggerIsEnabledSenarios::CodeAfter()
    IL_0029:  ret
  } // end of method LoggerIsEnabledSenarios::LogTraceWithEnabled_With_Code_After
} // end of class LoggerIsEnabledSenarios