.class public auto ansi beforefieldinit LoggerIsEnabledSenarios
       extends [netstandard]System.Object
{
  .method public hidebysig instance void 
          LogTrace_In_Switch() cil managed
  {
    // Code size       61 (0x3d)
    .maxstack  3
    .locals init (int32 V_0)
    IL_0000:  ldc.i4.1
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  brfalse.s  IL_000b
    IL_0005:  ldloc.0
    IL_0006:  ldc.i4.1
    IL_0007:  beq.s      IL_0012
    IL_0009:  br.s       IL_0036
    IL_000b:  ldarg.0
    IL_000c:  call       instance void LoggerIsEnabledSenarios::CodeBefore()
    IL_0011:  ret
    IL_0012:  ldarg.0
    IL_0013:  ldfld      class [Microsoft.Extensions.Logging.Abstractions]Microsoft.Extensions.Logging.ILogger LoggerIsEnabledSenarios::_logger
    IL_0018:  ldc.i4.0
    IL_0019:  callvirt   instance bool [Microsoft.Extensions.Logging.Abstractions]Microsoft.Extensions.Logging.ILogger::IsEnabled(valuetype [Microsoft.Extensions.Logging.Abstractions]Microsoft.Extensions.Logging.LogLevel)
    IL_001e:  brfalse.s  IL_003c
    IL_0020:  ldarg.0
    IL_0021:  ldfld      class [Microsoft.Extensions.Logging.Abstractions]Microsoft.Extensions.Logging.ILogger LoggerIsEnabledSenarios::_logger
    IL_0026:  ldstr      "message"
    IL_002b:  call       !!0[] [netstandard]System.Array::Empty<object>()
    IL_0030:  call       void [Microsoft.Extensions.Logging.Abstractions]Microsoft.Extensions.Logging.LoggerExtensions::LogTrace(class [Microsoft.Extensions.Logging.Abstractions]Microsoft.Extensions.Logging.ILogger,
                                                                                                                                 string,
                                                                                                                                 object[])
    IL_0035:  ret
    IL_0036:  ldarg.0
    IL_0037:  call       instance void LoggerIsEnabledSenarios::CodeAfter()
    IL_003c:  ret
  } // end of method LoggerIsEnabledSenarios::LogTrace_In_Switch
} // end of class LoggerIsEnabledSenarios