.class public auto ansi sealed beforefieldinit LoggerIsEnabledScenariosAbstractImplementation
       extends LoggerIsEnabledScenariosAbstract
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class [Microsoft.Extensions.Logging.Abstractions]Microsoft.Extensions.Logging.ILogger logger) cil managed
  {
    // Code size       8 (0x8)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void LoggerIsEnabledScenariosAbstract::.ctor(class [Microsoft.Extensions.Logging.Abstractions]Microsoft.Extensions.Logging.ILogger)
    IL_0007:  ret
  } 
  .method public hidebysig virtual instance void 
          LogDebug() cil managed
  {
    // Code size       36 (0x24)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [Microsoft.Extensions.Logging.Abstractions]Microsoft.Extensions.Logging.ILogger LoggerIsEnabledScenariosAbstract::_logger
    IL_0006:  ldc.i4.1
    IL_0007:  callvirt   instance bool [Microsoft.Extensions.Logging.Abstractions]Microsoft.Extensions.Logging.ILogger::IsEnabled(valuetype [Microsoft.Extensions.Logging.Abstractions]Microsoft.Extensions.Logging.LogLevel)
    IL_000c:  brfalse.s  IL_0023
    IL_000e:  ldarg.0
    IL_000f:  ldfld      class [Microsoft.Extensions.Logging.Abstractions]Microsoft.Extensions.Logging.ILogger LoggerIsEnabledScenariosAbstract::_logger
    IL_0014:  ldstr      "message"
    IL_0019:  call       !!0[] [netstandard]System.Array::Empty<object>()
    IL_001e:  call       void [Microsoft.Extensions.Logging.Abstractions]Microsoft.Extensions.Logging.LoggerExtensions::LogDebug(class [Microsoft.Extensions.Logging.Abstractions]Microsoft.Extensions.Logging.ILogger,
                                                                                                                                 string,
                                                                                                                                 object[])
    IL_0023:  ret
  } 
}
