.class public auto ansi beforefieldinit LoggerIsEnabledSenarios
       extends [netstandard]System.Object
{
  .method public hidebysig instance void 
          LogTraceWithEnabled_With_Code_Before_And_After() cil managed
  {
    // Code size       56 (0x38)
    .maxstack  3
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class [Microsoft.Extensions.Logging.Abstractions]Microsoft.Extensions.Logging.ILogger LoggerIsEnabledSenarios::_logger
    IL_0007:  ldc.i4.0
    IL_0008:  callvirt   instance bool [Microsoft.Extensions.Logging.Abstractions]Microsoft.Extensions.Logging.ILogger::IsEnabled(valuetype [Microsoft.Extensions.Logging.Abstractions]Microsoft.Extensions.Logging.LogLevel)
    IL_000d:  stloc.0
    IL_000e:  ldloc.0
    IL_000f:  brfalse.s  IL_0037
    IL_0011:  nop
    IL_0012:  ldarg.0
    IL_0013:  call       instance void LoggerIsEnabledSenarios::CodeBefore()
    IL_0018:  nop
    IL_0019:  ldarg.0
    IL_001a:  ldfld      class [Microsoft.Extensions.Logging.Abstractions]Microsoft.Extensions.Logging.ILogger LoggerIsEnabledSenarios::_logger
    IL_001f:  ldstr      "message"
    IL_0024:  call       !!0[] [netstandard]System.Array::Empty<object>()
    IL_0029:  call       void [Microsoft.Extensions.Logging.Abstractions]Microsoft.Extensions.Logging.LoggerExtensions::LogTrace(class [Microsoft.Extensions.Logging.Abstractions]Microsoft.Extensions.Logging.ILogger,
                                                                                                                                 string,
                                                                                                                                 object[])
    IL_002e:  nop
    IL_002f:  ldarg.0
    IL_0030:  call       instance void LoggerIsEnabledSenarios::CodeAfter()
    IL_0035:  nop
    IL_0036:  nop
    IL_0037:  ret
  } // end of method LoggerIsEnabledSenarios::LogTraceWithEnabled_With_Code_Before_And_After
} // end of class LoggerIsEnabledSenarios